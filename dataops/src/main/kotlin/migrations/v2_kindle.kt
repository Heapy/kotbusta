package migrations

import migrations.model.Migration
import org.intellij.lang.annotations.Language

@Language("SQLite")
private val sql = """
CREATE TABLE IF NOT EXISTS KINDLE_DEVICES
(
    ID         INTEGER PRIMARY KEY AUTOINCREMENT,
    USER_ID    INTEGER      NOT NULL,
    EMAIL      TEXT         NOT NULL,
    NAME       TEXT         NOT NULL,
    CREATED_AT TEXT         NOT NULL,
    UPDATED_AT TEXT         NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    UNIQUE (USER_ID, EMAIL)
);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_DEVICES_USER ON KINDLE_DEVICES (USER_ID);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_DEVICES_EMAIL ON KINDLE_DEVICES (EMAIL);
$next
CREATE TABLE IF NOT EXISTS KINDLE_SEND_QUEUE
(
    ID          INTEGER PRIMARY KEY AUTOINCREMENT,
    USER_ID     INTEGER NOT NULL,
    DEVICE_ID   INTEGER NOT NULL,
    BOOK_ID     INTEGER NOT NULL,
    FORMAT      TEXT    NOT NULL CHECK (FORMAT IN ('EPUB', 'MOBI')),
    STATUS      TEXT    NOT NULL CHECK (STATUS IN ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED')),
    ATTEMPTS    INTEGER NOT NULL,
    NEXT_RUN_AT TEXT    NOT NULL,
    LAST_ERROR  TEXT,
    CREATED_AT  TEXT    NOT NULL,
    UPDATED_AT  TEXT    NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    FOREIGN KEY (DEVICE_ID) REFERENCES KINDLE_DEVICES (ID) ON DELETE CASCADE,
    FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE
);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_QUEUE_STATUS ON KINDLE_SEND_QUEUE (STATUS);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_QUEUE_NEXT_RUN ON KINDLE_SEND_QUEUE (NEXT_RUN_AT);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_QUEUE_USER ON KINDLE_SEND_QUEUE (USER_ID);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_QUEUE_DEVICE ON KINDLE_SEND_QUEUE (DEVICE_ID);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_QUEUE_BOOK ON KINDLE_SEND_QUEUE (BOOK_ID);
$next
-- Kindle Send Events Table
CREATE TABLE IF NOT EXISTS KINDLE_SEND_EVENTS
(
    ID         INTEGER PRIMARY KEY AUTOINCREMENT,
    QUEUE_ID   INTEGER NOT NULL,
    EVENT_TYPE TEXT    NOT NULL,
    DETAILS    TEXT,
    CREATED_AT TEXT    NOT NULL,
    FOREIGN KEY (QUEUE_ID) REFERENCES KINDLE_SEND_QUEUE (ID) ON DELETE CASCADE
);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_EVENTS_QUEUE ON KINDLE_SEND_EVENTS (QUEUE_ID);
$next
CREATE INDEX IF NOT EXISTS IDX_KINDLE_SEND_EVENTS_TYPE ON KINDLE_SEND_EVENTS (EVENT_TYPE);
""".trimIndent()

val v2: Migration
    get() = Migration(
        version = 2,
        script = sql,
    )
