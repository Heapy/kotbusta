CREATE TABLE IF NOT EXISTS USERS
(
    ID         BIGSERIAL PRIMARY KEY,
    GOOGLE_ID  TEXT UNIQUE NOT NULL,
    EMAIL      TEXT        NOT NULL,
    NAME       TEXT        NOT NULL,
    AVATAR_URL TEXT,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS AUTHORS
(
    ID         BIGSERIAL PRIMARY KEY,
    FIRST_NAME TEXT,
    LAST_NAME  TEXT    NOT NULL,
    FULL_NAME  TEXT    NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS SERIES
(
    ID         BIGSERIAL PRIMARY KEY,
    NAME       TEXT    NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS BOOKS
(
    ID            BIGINT PRIMARY KEY,
    TITLE         TEXT    NOT NULL,
    ANNOTATION    TEXT,
    GENRE         TEXT,
    LANGUAGE      TEXT    NOT NULL DEFAULT 'RU',
    SERIES_ID     BIGINT,
    SERIES_NUMBER INTEGER,
    FILE_PATH     TEXT    NOT NULL,
    ARCHIVE_PATH  TEXT    NOT NULL,
    FILE_SIZE     BIGINT,
    DATE_ADDED    TIMESTAMPTZ NOT NULL,
    COVER_IMAGE   BYTEA,
    CREATED_AT    TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT FK_BOOKS_SERIES FOREIGN KEY (SERIES_ID) REFERENCES SERIES (ID)
);

CREATE TABLE IF NOT EXISTS BOOK_AUTHORS
(
    BOOK_ID   BIGINT NOT NULL,
    AUTHOR_ID BIGINT NOT NULL,
    PRIMARY KEY (BOOK_ID, AUTHOR_ID),
    CONSTRAINT FK_BOOK_AUTHORS_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_BOOK_AUTHORS_AUTHOR FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USER_STARS
(
    USER_ID    BIGINT NOT NULL,
    BOOK_ID    BIGINT NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    PRIMARY KEY (USER_ID, BOOK_ID),
    CONSTRAINT FK_USER_STARS_USER FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_USER_STARS_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USER_COMMENTS
(
    ID         BIGSERIAL PRIMARY KEY,
    USER_ID    BIGINT NOT NULL,
    BOOK_ID    BIGINT NOT NULL,
    COMMENT    TEXT   NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT FK_USER_COMMENTS_USER FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_USER_COMMENTS_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USER_NOTES
(
    ID         BIGSERIAL PRIMARY KEY,
    USER_ID    BIGINT  NOT NULL,
    BOOK_ID    BIGINT  NOT NULL,
    NOTE       TEXT    NOT NULL,
    IS_PRIVATE BOOLEAN NOT NULL DEFAULT TRUE,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT FK_USER_NOTES_USER FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_USER_NOTES_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS DOWNLOADS
(
    ID         BIGSERIAL PRIMARY KEY,
    USER_ID    BIGINT NOT NULL,
    BOOK_ID    BIGINT NOT NULL,
    FORMAT     TEXT   NOT NULL,
    CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT FK_DOWNLOADS_USER FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
    CONSTRAINT FK_DOWNLOADS_BOOK FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS IDX_BOOKS_TITLE ON BOOKS (TITLE);
CREATE INDEX IF NOT EXISTS IDX_BOOKS_GENRE ON BOOKS (GENRE);
CREATE INDEX IF NOT EXISTS IDX_BOOKS_LANGUAGE ON BOOKS (LANGUAGE);
CREATE INDEX IF NOT EXISTS IDX_BOOKS_SERIES ON BOOKS (SERIES_ID);
CREATE INDEX IF NOT EXISTS IDX_AUTHORS_NAME ON AUTHORS (LAST_NAME, FIRST_NAME);
CREATE INDEX IF NOT EXISTS IDX_USER_COMMENTS_BOOK ON USER_COMMENTS (BOOK_ID);
CREATE INDEX IF NOT EXISTS IDX_USER_COMMENTS_USER ON USER_COMMENTS (USER_ID);
CREATE INDEX IF NOT EXISTS IDX_DOWNLOADS_RECENT ON DOWNLOADS (CREATED_AT DESC);
