/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbusta.jooq.tables.daos


import io.heapy.kotbusta.jooq.tables.UserStars
import io.heapy.kotbusta.jooq.tables.records.UserStarsRecord

import java.time.OffsetDateTime

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class UserStarsDao(configuration: Configuration?) : DAOImpl<UserStarsRecord, io.heapy.kotbusta.jooq.tables.pojos.UserStars, Record2<Long?, Long?>>(UserStars.USER_STARS, io.heapy.kotbusta.jooq.tables.pojos.UserStars::class.java, configuration) {

    /**
     * Create a new UserStarsDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: io.heapy.kotbusta.jooq.tables.pojos.UserStars): Record2<Long?, Long?> = compositeKeyRecord(o.userId, o.bookId)

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfUserId(lowerInclusive: Long, upperInclusive: Long): List<io.heapy.kotbusta.jooq.tables.pojos.UserStars> = fetchRange(UserStars.USER_STARS.USER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    fun fetchByUserId(vararg values: Long): List<io.heapy.kotbusta.jooq.tables.pojos.UserStars> = fetch(UserStars.USER_STARS.USER_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfBookId(lowerInclusive: Long, upperInclusive: Long): List<io.heapy.kotbusta.jooq.tables.pojos.UserStars> = fetchRange(UserStars.USER_STARS.BOOK_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    fun fetchByBookId(vararg values: Long): List<io.heapy.kotbusta.jooq.tables.pojos.UserStars> = fetch(UserStars.USER_STARS.BOOK_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<io.heapy.kotbusta.jooq.tables.pojos.UserStars> = fetchRange(UserStars.USER_STARS.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<io.heapy.kotbusta.jooq.tables.pojos.UserStars> = fetch(UserStars.USER_STARS.CREATED_AT, *values)
}
