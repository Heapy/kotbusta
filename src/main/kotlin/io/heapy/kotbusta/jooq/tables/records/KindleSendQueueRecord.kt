/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbusta.jooq.tables.records


import io.heapy.kotbusta.jooq.tables.KindleSendQueue

import java.time.Instant

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class KindleSendQueueRecord private constructor() : UpdatableRecordImpl<KindleSendQueueRecord>(KindleSendQueue.KINDLE_SEND_QUEUE) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var userId: Int
        set(value): Unit = set(1, value)
        get(): Int = get(1) as Int

    open var deviceId: Int
        set(value): Unit = set(2, value)
        get(): Int = get(2) as Int

    open var bookId: Int
        set(value): Unit = set(3, value)
        get(): Int = get(3) as Int

    open var format: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var status: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var attempts: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var nextRunAt: Instant
        set(value): Unit = set(7, value)
        get(): Instant = get(7) as Instant

    open var lastError: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var createdAt: Instant
        set(value): Unit = set(9, value)
        get(): Instant = get(9) as Instant

    open var updatedAt: Instant
        set(value): Unit = set(10, value)
        get(): Instant = get(10) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised KindleSendQueueRecord
     */
    constructor(id: Int? = null, userId: Int, deviceId: Int, bookId: Int, format: String? = null, status: String? = null, attempts: Int? = null, nextRunAt: Instant, lastError: String? = null, createdAt: Instant, updatedAt: Instant): this() {
        this.id = id
        this.userId = userId
        this.deviceId = deviceId
        this.bookId = bookId
        this.format = format
        this.status = status
        this.attempts = attempts
        this.nextRunAt = nextRunAt
        this.lastError = lastError
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
