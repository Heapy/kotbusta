/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbusta.jooq.tables.daos


import io.heapy.kotbusta.jooq.enums.JobStatusEnum
import io.heapy.kotbusta.jooq.enums.JobTypeEnum
import io.heapy.kotbusta.jooq.tables.ImportJobs
import io.heapy.kotbusta.jooq.tables.records.ImportJobsRecord

import java.time.OffsetDateTime

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ImportJobsDao(configuration: Configuration?) : DAOImpl<ImportJobsRecord, io.heapy.kotbusta.jooq.tables.pojos.ImportJobs, Long>(ImportJobs.IMPORT_JOBS, io.heapy.kotbusta.jooq.tables.pojos.ImportJobs::class.java, configuration) {

    /**
     * Create a new ImportJobsDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: io.heapy.kotbusta.jooq.tables.pojos.ImportJobs): Long? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Long?, upperInclusive: Long?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Long): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Long): io.heapy.kotbusta.jooq.tables.pojos.ImportJobs? = fetchOne(ImportJobs.IMPORT_JOBS.ID, value)

    /**
     * Fetch records that have <code>job_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfJobType(lowerInclusive: JobTypeEnum, upperInclusive: JobTypeEnum): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.JOB_TYPE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>job_type IN (values)</code>
     */
    fun fetchByJobType(vararg values: JobTypeEnum): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.JOB_TYPE, *values)

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfStatus(lowerInclusive: JobStatusEnum, upperInclusive: JobStatusEnum): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.STATUS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    fun fetchByStatus(vararg values: JobStatusEnum): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.STATUS, *values)

    /**
     * Fetch records that have <code>progress BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProgress(lowerInclusive: String?, upperInclusive: String?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.PROGRESS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>progress IN (values)</code>
     */
    fun fetchByProgress(vararg values: String): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.PROGRESS, *values)

    /**
     * Fetch records that have <code>inp_files_processed BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    fun fetchRangeOfInpFilesProcessed(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.INP_FILES_PROCESSED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>inp_files_processed IN (values)</code>
     */
    fun fetchByInpFilesProcessed(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.INP_FILES_PROCESSED, *values.toTypedArray())

    /**
     * Fetch records that have <code>books_added BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfBooksAdded(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.BOOKS_ADDED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>books_added IN (values)</code>
     */
    fun fetchByBooksAdded(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.BOOKS_ADDED, *values.toTypedArray())

    /**
     * Fetch records that have <code>books_updated BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfBooksUpdated(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.BOOKS_UPDATED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>books_updated IN (values)</code>
     */
    fun fetchByBooksUpdated(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.BOOKS_UPDATED, *values.toTypedArray())

    /**
     * Fetch records that have <code>books_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfBooksDeleted(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.BOOKS_DELETED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>books_deleted IN (values)</code>
     */
    fun fetchByBooksDeleted(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.BOOKS_DELETED, *values.toTypedArray())

    /**
     * Fetch records that have <code>covers_added BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCoversAdded(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.COVERS_ADDED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>covers_added IN (values)</code>
     */
    fun fetchByCoversAdded(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.COVERS_ADDED, *values.toTypedArray())

    /**
     * Fetch records that have <code>book_errors BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfBookErrors(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.BOOK_ERRORS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>book_errors IN (values)</code>
     */
    fun fetchByBookErrors(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.BOOK_ERRORS, *values.toTypedArray())

    /**
     * Fetch records that have <code>cover_errors BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCoverErrors(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.COVER_ERRORS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>cover_errors IN (values)</code>
     */
    fun fetchByCoverErrors(vararg values: Int): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.COVER_ERRORS, *values.toTypedArray())

    /**
     * Fetch records that have <code>error_message BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfErrorMessage(lowerInclusive: String?, upperInclusive: String?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.ERROR_MESSAGE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>error_message IN (values)</code>
     */
    fun fetchByErrorMessage(vararg values: String): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.ERROR_MESSAGE, *values)

    /**
     * Fetch records that have <code>started_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfStartedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.STARTED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>started_at IN (values)</code>
     */
    fun fetchByStartedAt(vararg values: OffsetDateTime): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.STARTED_AT, *values)

    /**
     * Fetch records that have <code>completed_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCompletedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.COMPLETED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>completed_at IN (values)</code>
     */
    fun fetchByCompletedAt(vararg values: OffsetDateTime): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.COMPLETED_AT, *values)

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatedAt(lowerInclusive: OffsetDateTime?, upperInclusive: OffsetDateTime?): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetchRange(ImportJobs.IMPORT_JOBS.CREATED_AT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    fun fetchByCreatedAt(vararg values: OffsetDateTime): List<io.heapy.kotbusta.jooq.tables.pojos.ImportJobs> = fetch(ImportJobs.IMPORT_JOBS.CREATED_AT, *values)
}
